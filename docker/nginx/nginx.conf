# from: /etc/nginx/nginx.conf

#user nginx;  # disable it for non-root user

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /logs/nginx/error.log warn;

# 进程pid路径, 确保 nginx 有路径的写权限
pid /run/nginx/nginx.pid;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

# Include files with config snippets into the root context.
#include /etc/nginx/conf.d/*.conf;

events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

    # Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001;

	# Don't tell nginx version to the clients. Default is 'on'.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable. Default is '1m'.
	client_max_body_size 1m;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write(). Default is off.
	#sendfile on;
	## 开启高效传输模式
	## Sendfile not used in a proxy environment.
	sendfile off;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames. Default is 'off'.
	## 激活tcp_nopush参数可以允许把http response header和文件的开始放在一个文件里发布，作用是减少网络报文段的数量
	tcp_nopush on;

	## Sends data as fast as it can not buffering large chunks, saves about 200ms per request.
	## 激活tcp_nodelay，内核会等待将更多的字节组成一个数据包，从而提高I/O性能
    tcp_nodelay on;

    ## 为了快速处理静态数据集，例如服务器名称， 映射指令的值，MIME类型，请求头字符串的名称，nginx使用哈希表
    types_hash_max_size 2048;

    # 长连接超时时间，单位是秒
    keepalive_timeout 60;

	# Enables the specified protocols. Default is TLSv1 TLSv1.1 TLSv1.2.
	# TIP: If you're not obligated to support ancient clients, remove TLSv1.1.
	#ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
	ssl_protocols TLSv1.2 TLSv1.3;

	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	# TIP: Generate with: `openssl dhparam -out /etc/ssl/nginx/dh2048.pem 2048`
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	# Default is 'off'.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	# Default is 'none'.
	#ssl_session_cache shared:SSL:2m;
	# 1m ~= 4000 connections
	ssl_session_cache shared:SSL:8m;

	# Specifies a time during which a client may reuse the session parameters.
	# Default is '5m'.
	#ssl_session_timeout 1h;
	ssl_session_timeout 4h;

	# Disable TLS session tickets (they are insecure). Default is 'on'.
	ssl_session_tickets off;

	# Enable gzipping of responses.
	gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
	gzip_vary on;

	# Helper variable for proxying websockets.
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}

	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /logs/nginx/access.log main;

	# Includes virtual hosts configs.
	include /etc/nginx/http.d/*.conf;
	include /data/nginx/http.d/*.conf;

	# http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive_time
	#keepalive_time 1h;

}

stream {
    # from: /etc/nginx/conf.d/stream.conf

	# Specifies the main log format.
	log_format main '$remote_addr [$time_local] '
			'$protocol $status $bytes_sent $bytes_received '
			'$session_time "$upstream_addr" '
			'"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

	access_log /logs/nginx/stream.log main;

	# Includes servers configs.
    include /data/nginx/stream.d/*.conf;
}